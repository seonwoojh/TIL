부트 프로세스 실습

현재 default target 확인

systemctl get-default

다른 target으로 변경 

systemctl set-default multi-user.target / graphical.target

root password 변경

kernel 선택화면

아무키나 눌러서 카운트 해제

kernel 선택부분에서 e 를 눌러서 부트로더 화면으로 이동

방향키를 눌러 linux16 라인 끝에 rd.break를 작성하고 ctrl+x

swich_root 쉘 프롬프트에

mount -o rw,remount /sysroot

chroot /sysroot

passwd

touch /.autorelabel

ctrl+d 두번 해서 reboot

부트로더 ID/PASSWORD 설정

vi /etc/grub.d/00_header

G
o

cat << EOF
set superusers='ID'
password ID PW
EOF

:wq

부트로더 시간 20초로 설정

vi /etc/default/grub

GRUB_TIMEOUT=20로 수정
:wq

grub2-mkconfig -o /boot/grub2/grub.cfg

================================================================================

스냅샷 초기화

기존 repo 파일을 새로 생성한 backup 디렉토리에 이동 시켜놓고

cd /etc/yum.repos.d/

mkdir backup

mv C* b*

dvd 와 인터넷을 통해서 다운을 받을 수 있도록 repo 파일 설정
인터넷 주소 =>http://mirrors.kernel.org/centos/7/os/x86_64/
로컬 주소 => file:///media/cdrom (dvd 마운트 위치)

mkdir /media/cdrom

mount /dev/cdrom /media/cdrom

vi test.repo

[DVD]
name=dvd
baseurl=file:///media/cdrom
enabled=1
gpgcheck=0

[NET]
name=network
baseurl=http://mirrors.kernel.org/centos/7/os/x86_64
enabled=1
gpgcheck=0

:wq

zsh 패키지를 rpm 명령어를 통해서 설치

rpm -Uvh /media/cdrom/Packages/zsh-xxxxxxxxxx.rpm

zsh 패키지를 rpm 명령어를 통해서 삭제

rpm -e zsh

ksh 패키지를 yum 명령어를 통해서 설치(한번에 설치까지)

yum install ksh -y

zsh 패키지를 yum 명령어를 통해서 설치(ISO 이미지의 .rpm 파일을 통해서)

yum localinstall /media/cdrom/Packages/zsh-xxxxxxx.rpm -y

ksh 패키지를 yum 명령어를 통해서 삭제(한번에 삭제)

yum remove ksh  -y

그룹 패키지 리스트 확인

yum groups list

Security Tools / 보안 툴 패키지 정보 확인

yum groups info "Security Tools" / "보안 툴"

Security Tools 그룹 패키지 설치

yum groups install "Security Tools" / "보안 툴" 

Security Tools 그룹 패키지 삭제

yum groups remove "Security Tools" / "보안 툴"

패키지 설치 로그를 확인

less /var/log/yum.log

/var/www 디렉토리가 어떤 패키지로 인해서 생성된 것인지 확인하시오.

yum provides /var/www

rpm -qf /var/www

해당 패키지로 인해서 생성된 설정 파일 확인

rpm -qc httpd

해당 패키지로 인해서 생성된 문서 파일 확인

rpm -qd httpd

해당 패키지에 대한 정보를 확인하시오.

rpm -qi httpd

httpd 서비스 시작 (해당 서비스는 httpd.service)

systemctl start httpd.service

서비스 활성화

systemctl enable httpd.service

서비스 종료 및 비활성화

systemctl stop httpd.service
systemctl disable httpd.service

해당 패키지 삭제

yum remove httpd

다시 설치

yum install httpd


====================================================================================

네트워크 관리 명령어 정리

nmcli device : device 종류를 볼 수 있음.

nmcli connection show : connection 종류를 볼 수 있음

nmcli con show "con-name" : connection의 자세한 정보

nmcli con add 

: con-name   (== connection.id)          - 연결이름
: ifname     (== connection.interface)   - 연결할 인터페이스
: type       (== connection.type)        - 통신방식
: autoconnect(== connection.autoconnect) - 부팅시 자동연결 설정

------------유동IP 설정 가능(dhcp)----------

고정IP 설정인 경우에는 아래 내용 추가

:ip4         (== ipv4.addresses)   - ip주소 지정
:gw4         (== ipv4.gateway)     - 게이트웨이 주소 지정

ex)

nmcli con add con-name "connection 이름" ifname 물리 장치 type ethernet autoconnect yes => dhcp 설정

nmcli con add con-name "connection 이름" ifname 물리 장치 type ethernet autoconnect yes ip4 "xxx.xxx.xxx.xxx/xx" gw4 "xxx.xxx.xxx.xxx" => 고정 아이피 설정

nmcli con reload

nmcli con up "connection 이름" 

dhcp => 고정 아이피로 수정 한다고 했을 때

nmcli con mod dhcp(con-name) ipv4.addresses "할당 아이피주소/프리픽스" ipv4.gateway "게이트웨이주소" ipv4.method manual connection.id 바꿀 con-name connection.interface-name (new device)

호스트명 변경

hostnamectl set-hostname 호스트명

--------------------------------------------------------------------------

네트워크 실습

초기 설정으로 초기화

현재 IP 주소를  2가지 방법으로 확인해보시오.

ifconfig

ip addr

add로 연결 생성

dhcp => 유동IP

nmcli con add con-name dhcp ifname enp0s9 type ethernet autoconnect yes

nmcli con reload

nmcli con 

static1 => ip : 192.168.56.200/24, gw : 192.168.56.1 

nmcli con add con-name static1 ifname enp0s9 type ethernet autoconnect yes ip4 "192.168.56.200/24" gw4 "192.168.56.1"

nmcli con reload

nmcli con

modify 로 연결 수정

- dhcp 연결을 static 으로 이름 변경 후 
- 192.168.56.120으로 고정 아이피 설정
- 192.168.100.30 주소 추가
- 8.8.8.8 dns 설정 
- 자동 연결 안되도록 수정
- method maual 로 설정 후 네트워크 연결 확인

nmcli con mod dhcp connection.id static ipv4.method manual ipv4.addresses 192.168.56.120/24 +ipv4.addresses 192.168.56.30/24 ipv4.gateway 192.168.56.1 ipv4.dns 8.8.8.8 connection.autoconnect no 

nmcli con reload

nmcli con 

nmcli con up static

ip addr show enp0s9

192.168.56.200 주소를 제거하시오.

nmcli con mod static -ipv4.address 192.168.56.200/24 

nmcli con reload

nmcli con up static

ip addr show enp0s9

hostname을 encore으로 설정

hostnamectl set-hostname encore

hostname

======================================================================


ssh

키기반 인증 방식

클라이언트 사용자

ssh-keygen
=> 키 기반 인증을 위한 공개키와 개인키 생성

ssh-copy-id id@server ip address 
=> 클라이언트가 생성한 공개키를 서버에 등록하게 됩니다.




SSH 실습

client 에 cuser 생성하고 활성화 시키시오.

useradd cuser
passwd cuser

server에 suser 생성하고 활성화 시키시오.

useradd suser
passwd suser

cuser 에서 suser로 ssh 접속
server : 192.168.56.150로 가정

ssh suser@192.168.56.150

cuser 측에서 보관하고 있는 공개키(public key)와 suser가 보유한 공개키(public key) 내용 확인

client

vi ~/.ssh/known_hosts

server

vi /etc/ssh/ssh_host_ecdsa_key.pub

server의 공개키와 개인키 삭제 후 sshd 재실행

server

rm -f /etc/ssh/ssh_host*

ls /etc/ssh

systemctl restart sshd

ls /etc/ssh

cuser 측에서 보관하고 있는 공개키(public key)와 server가 보유한 공개키(public key) 내용 확인

client

vi ~/.ssh/known_hosts

server

vi /etc/ssh/ssh_host_ecdsa_key.pub

내용이 일치 하지 않음

client

ssh suser@192.168.56.150

접속거절

cuser가 suser로 접속할 수 있도록 하시오.

rm ~/.ssh/known_hosts

ssh suser@192.168.56.150

server의 공개를 다시 받음.

cuser가 suser로 암호없이 로그인 되도록 키인증방식으로 설정하시오.

client

ssh-keygen
ssh-copy-id suser@192.168.56.150

cuser에 server의 root 계정으로 접속 할 수 없도록 설정하시오.

server

vi /etc/ssh/sshd_config

/PermitRoot

PermitRootLongin  no로 변경

======================================================================

firewalld

firewall-cmd

--state                                   : firewalld 실행 상태 확인
--get-default-zone                        : 현재 기본 영역 표시
--set-default-zone [zone]                 : 기본 영역 설정
--get-zones                               : 사용가능한 모든 영역 나열
--get-services                            : 사용가능한 모든 서비스 나열
--get-active-zones                        : 현재 사용중인 모든 영역과 인터페이스 및 소스정보 나열
--add-source=[ip주소] --zone=[zone]       : 출발지 주소 규칙 추가
=> '--zone' 옵션을 통해 zone 지정해주지 않으면 자동으로 기본영역에 추가
--remove-source=[ip주소]                  : IP 주소를 지정된 영역에서 제거
--add-interface=[ifname] --zone=[zone]    : 특정 영역에 interface 연결 추가
--change-interface=[ifname] --zone=[zone] : 영역에 연결된 interface 변경
--list-all --zone=[zone]                  : 영역에 구성된 모든 인터페이스, 소스, 서비스, 포트 나열
--add-service=[service] --zone=[zone]     : 해당 서비스 트래픽 허용
--add-port=[port|protocol] --zone=[zone]  : 해당 포트나 프로토콜 트래픽 허용
 + --permanent                            : 해당 옵션을 사용하지 않으면 현재 설정이 변경되며 영구설정은 지정이 안됨.
--reload                                  : 런타임 구성 삭제, 영구 구성 적용
--runtime-to-permanent                    : 실행중 설정을 영구 설정으로 변경



firewalld 실습

centos, server 초기화

server에서 작업

nfs-utils, nfs-utils-lib 패키지 설치

nfs 서비스를 시작,활성화 후에 상태 확인

home zone에 다음 사항 추가 영구설정

포트 번호
80/tcp, 111/tcp, 2049/udp, 20048/tcp

프로토콜
ICMP

서비스
nfs

home zone 상태 확인

home zone 을 default-zone 으로 설정

home zone ip address 확인

centos 컴퓨터에서 http://192.168.56.100/index.html 을 했을 경우 this is centos 라고 출력 되도록 하시오.

================================================================================================

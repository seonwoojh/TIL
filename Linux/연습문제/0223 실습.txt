/etc/passwd

계정명 : password(X) : UID : GID : 코멘트 : 홈디렉토리 : 로그인쉘

/etc/shadow

계정명 : 암호화된 패스워드 : lastchd : min : Max : warning : inactive : expire : blank

암호화된 패스워드

$해쉬알고리즘 종류(6-sha512) $salt값(패스워드를 변경할때 임의적으로 생성) $ 입력한 패스워드와 salt 값을 해쉬알고리즘으로 암호화한 값

/etc/group

그룹명 : 패스워드(X) : GID : 보조그룹 구성원

기본그룹                        보조그룹
1인1그룹                        0개 이상 가입 가능
계정생성시에 자동으로 설정      수동으로 설정

파일이나 디렉토리에 소유그룹의 권한을 행사하기 위해서 사용

사용자 전환
su       : 사용자로만 전환(위치나 일부 환경변수 기존 사용자 정보로 유지)
su -     : 전환되는 사용자의 모든 환경까지 가져옴.

su => 전환시에 해당 사용자의 password 필요
root로 전환시에 해당 password가 알려질 가능성이 있음.

sudo     : 일회성으로 root 권한을 가져올때 사용 
sudo -i  : su - root 처럼 root로 전환 시 사용

sudo => root password가 아닌 자신의 password 필요
sudo를 사용하기 위해서는 wheel 그룹에 속해있어야 함.
기본 그룹이든 보조 그룹이든 
wheel 그룹이 /etc/sudoers에 sudo를 사용할 수 있는 그룹으로 설정이 되어 있기 때문에 

사용자관리

사용자 생성에 따른 설정 파일 2가지

/etc/default/useradd

/etc/login.defs


사용자 생성 기본값 수정 방법 2가지

/etc/default/useradd
해당 내용 확인

vi /etc/default/useradd

or

useradd -D(default란 의미)

생성
useradd [option] 계정명 => 옵션을 안붙이면 default 설정을 따라감.

-u : uid 설정
-g : gid 설정 (gid를 설정하기 위해서는 반드시 존재하는 그룹이어야지만 설정 가능)
-G : 보조그룹 설정
-c : 코멘트 설정
-d : 홈디렉토리 설정
-s : 로그인 쉘 설정
    - 서버로의 로그인 필요치 않은 계정(ftp, 메일)
      일 경우 쉘을 /sbin/nologin 로 설정
-b : base 홈 변경
-m(make) : /etc/login.defs에서 홈디렉토리 생성 항목이 no로 되어 있을 시에 홈디렉토리 생성 위해서 사용하는 옵션 
-D : default 확인 및 설정

수정

usermod option 계정명

옵션
useradd에서 사용했던 옵션을 거의 다 사용할 수 있음.
usermod에서만 사용되는 옵션
-a : 보조그룹을 추가할 때 (-aG 형태로 쓰임)
-m(move) : 홈디렉토리 변경시에 실제로 디렉토리를 변경하기 위해서 사용(-md 형태로 쓰임)
-l : 사용자 계정명 변경
-L : 계정 lock
-U : 계정 lock 해제

삭제
userdel [option] 계정명
옵션
-r : 삭제하고자 하는 계정에 홈디렉토리와 메일함 삭제시에 사용. 
     사용하지 않으면 홈디렉토리와 메일함이 남아있게 되서 동일한 UID로 배정받는 사용자가 사용할 수 있게 됨.

그룹 관리

생성
groupadd [option] 그룹명
-g : GID 설정
-o : 기존 GID 사용(-og형태로 사용)

수정
groupmod option 그룹명
-g : GID 변경
-o : 기존 GID 사용
-n : 그룹명 변경

삭제
groupdel 그룹명

암호

암호 변경
passwd 명령어를 통해서 패스워드 변경 가능

암호 속성 변경
chage option 계정명
옵션
-l(소문자 엘) : 암호 속성 확인
-m : min date 변경
-M : Max date 변경
-W : warning date 변경
-I(대문자 아이) : inactive 변경
-E : expire 변경
-d : 암호 변경 시기 설정


초기화로 스냅샷 

모든 사용자 삭제 (userdel -r 사용자명)

userdel -r centos

centos 사용자 생성 및 활성화

useradd centos
passwd centos

centos 를 sudo로 사용자 전환 할 수 있도록 설정 후 centos로 사용자 전환

usermod -G wheel centos
su - centos

sudo -i로 root 전환 후 사용자 생성

sudo -i

default 값을 
home1, /bin/sh 로 설정

useradd -D -b /home1 -s /bin/sh

사용자      uid	gid   보조그룹    home	          shell
user01     1001	1001  1000	/home/user01(-b)  /bin/bash

useradd -b /home -s /bin/bash user01

user02     2000	1000  10	/home/user2       /bin/bash

useradd -u 2000 -g 1000 -G 10 -d /home/user2  -s /bin/bash

user03     2001	2001  wheel	/home/user3       /bin/bash

useradd -G wheel -d /home/user3  -s /bin/bash user03

testuser01 2002	1000            /home1/testuser01 /bin/sh

useradd -g 1000 testuser01

default 값
home, /bin/bash 로 변경

vi /etc/default/useradd

/home1 => /home
/bin/sh => /bin/bash

user02의 홈디렉토리를 /home/user02로 변경

usermod -md /home/user02 user02

user03의 홈디렉토리를 삭제 후에 다시 만들 것

rm -rf ~user03/

cp -r /etc/skel  ~user03/

chown -R user03:user03 ~user03/

chmod 700 ~user03/

testuser01의 아이디명을 user04로 변경, 코멘트 user4로 변경, 홈디렉토리 /home/user04로 변경, 쉘을 /bin/bash로 변경 	

usermod -l user04 -c user4 -md /home/user04 -s /bin/bash testuser01

--------------------------------------------------------

group 생성

그룹명		gid
newgroup01 	4000

groupadd -g 4000 newgroup01

newgroup02	10

groupadd -og 10 newgroup02

newgroup01을 newgroup 으로 이름 변경하고, gid를 1000으로 변경

groupmod -n newgroup -og 1000 newgrou01

newgroup02를 newgroup01 로 이름 변경, gid를 4000 으로 변경

groupmod -n newgroup01 -g 4000 newgroup02

user01을 newgroup의 구성원으로 

id user01
usermod -aG newgroup user01 

user02를 newgroup01의 구성원으로

id user02
usermod -G newgroup01 user02

그룹 구성원 확인

grep 'new' /etc/group

newgroup 과 newgroup01 삭제

groupdel newgroup
에러발생 : centos 사용자의 주그룹입니다.
id centos => 1000이 주그룹
groupmod -g 5000 newgroup
groupdel newgroup
에러발생 : centos 사용자의 주그룹입니다.
id centos => 5000이 주그룹
usermod -g 1000 centos
groupdel newgroup
삭제 완료

groupdel newgroup01
삭제 완료

aclgroup gid 3000으로 생성

groupadd -g 3000 aclgroup

================================================================

확장권한
             file        directory
setuid       o           x
setgid       o           o
sticky bit   x           o
(실행권한 있어야 됨)

setuid : 파일의 소유주 권한으로 실행

setgid : 

file - 파일의 소유그룹 권한으로 실행

directory  - setgid 부연된 디렉토리의 파일들에 대해서 소유그룹이 계속해서 소유그룹 권한을 행사함. setgid는 하위 새로 만들어지는 디렉토리에 상속

sticky bit : 해당 디렉토리에 생성된 파일이나 디렉토리에 대한 삭제 권한을 파일의 소유자와 root에게만 가능하도록 함.

확정권한 설정

              심볼릭 모드          팔진수 모드

setuid :      chmod u+s file명     chmod +4000 file명
setgid :      chmod g+s file/dir명 chmod +2000 file/dir명
sticky bit :  chmod o+t dir명      chmod +1000 dir명

확장권한 실습

ptest 디렉토리 생성

mkdir /ptest

/ptest에 모든 권한을 rwx로 주고 setgid 권한도 줄 것

chmod 2777 /ptest

or

chmod a=rwx,g+s /ptest

user01로 사용자 전환

su - user01

/ptest 안에 파일 file01 과 디렉토리 dir01 생성 

mkdir /ptest/dir01
touch /ptest/file01

file01과 dir01 소유권 확인 및 dir01의 퍼미션 확인

ls -l /ptest/

drwxrwsr-x  user01  root   ....  dir01
-rw-rw-r--  user01  root   ....  file01

root로 사용자 전환

exit

dir01의 소유권을 user01로 바꾸고 소유그룹을 student로 변경 하고 sticky bit 권한과 모든 사용자에게 rwx 권한을 줄것 

chown user:student /ptest/dir01

에러 : student 그룹X

groupadd student

chown user:student /ptest/dir01

chmod 1777 /ptest/dir01

file01에 setuid 권한을 줄 것

chmod u+s /ptest/file01

user02로 사용자 전환

su - user02

./dir01 안에 파일 file02와 디렉토리 dir02 생성

mkdir /ptest/dir01/dir02
touch /ptest/dir01/file02

file02 와 dir02의 소유권 확인

ls -l /ptest/dir01

drwxrwsr-x  user02  student   ....  dir01
-rw-rw-r--  user02  student   ....  file01


user03로 사용자 전환 /ptest/dir01/file02 삭제 해볼 것

su - user03

rm  /ptest/dir01/file02
에러 발생 : dir01이 sticky bit 설정이 되어 있음.

/ptest/file01 삭제 해볼 것

rm /ptest/file01
삭제 완료

setgid 권한이 주어진 파일이나 디렉토리를 검색하는 방법은?

find / -perm -2000 -ls 2> /dev/null

or

ls -lR / | grep '^......s.... '

-------------------------------------------------
접근제어목록(Access control list : acl)

acl의 목적
특정사용자 특정 그룹의 구성원에게 권한 별도로 부여하기 위해서 사용.


기본적으로 일반권한으로 나눌 수 있는 군.

소유주 소유그룹 기타사용자

소유주(y/n) y -> 소유주의 권한
n
소유그룹(y/n) y -> 소유그룹의 권한
n
기타사용자의 권한

특정사용자 특정 그룹의 구성원에게 별도의 권한 줄 수 없다.



acl을 설정할 경우

소유주(y/n) y -> 소유주의 권한
n
특정사용자(y/n) y-> 특정사용자의 권한
n
소유그룹(y/n) y -> 소유그룹의 권한
n
특정그룹(y/n) y -> 특정그룹의 권한
n
기타사용자의 권한

acl 권한의 확인 방법

ls -l 했을 경우에

- - - - - - - - - -  -
1 2 3 4 5 6 7 8 9 10 11

1:파일의 종류
2~10 : 권한부분(2~4 소유주 5~7 소유그룹 8~10 기타사용자)
11 : acl 설정확인 부분
  . or 공백 - acl 설정이 되지 않았다.
  +         - acl 설정이 되어 있다.

acl의 영향 받는 대상

특정사용자, 소유그룹, 특정그룹만 영향을 받음

소유주와 기타사용자는 acl의 영향(mask)을 받지 않습니다.

mask의 권한 acl 대상이 받을 수 있는 최대 권한
-acl 대상의 권한과 mask 권한을 and 연산해서 결과가 나옴.

acl을 설정할 경우에 생기는 변화
ls -l의 권한 항목 중에서
 
- - - - - - - - - -  -
1 2 3 4 5 6 7 8 9 10 11

-11번이 +로 변함
-기존에 소유그룹의 권한(5~7번)이 마스크 권한으로 대체됨.

acl에 관련된 명령어

getfacl : acl 설정 확인
setfacl : acl 설정

setfacl syntax

setfacl option acl엔트리 파일명/디렉토리명

acl 엔트리
소유주     - u::권한
특정사용자 - u:계정명:권한
소유그룹   - g::권한
특정그룹   - g:그룹명:권한
기타사용자 - o::권한
마스크     - m::권한 

setfacl 옵션

-m : acl설정
-x : acl엔트리 삭제
-b : acl설정 초기화(acl설정 X)
-k : default acl설정 초기화


일반 acl과 기본(default) acl

일반 acl : acl이 설정되어 있는 그 자체에 대해서 권한행사

기본 acl 
- 기본 acl이 설정되어 있는 디렉토리에 대해서는 아무런 권한을 행사할 수 없음.
- 대신 기본 acl이 설정되어 있는 디렉토리에 파일이나 디렉토리를 생성할 경우 기본 acl 설정이 생성 파일이나 디렉토리에 부여됨.
- 생성된 디렉토리에는 기본acl이 상속 됩니다.


실습


user02를 aclgroup 구성원으로 넣을 것(기본 그룹으로 바꾸는 것 아님)

usermod -G aclgroup user02

/ptest 모든 내용 삭제하고 777로 권한변경 소유그룹을 다시 root로 변경

rm -rf /ptest
mkdir -m 777 /ptest

/ptest 에 user03 은 접근 할 수 없도록 설정

setfacl -m u:user03:0 /ptest

/ptest 에 파일 aclfile01 과 디렉토리 acldir01 생성

mkdir /ptest/acldir01
touch /ptest/aclfile01

aclfile01은 user01 만이 읽기, 쓰기, 실행 가능하도록 설정하고 나머지는 읽기, 쓰기만 실행가능하도록

chmod 666 /ptest/aclfile01
setfacl -m u:user01:7 /ptest/aclfile01

acldir01는 aclgroup 만이 읽기 쓰기가능하고 나머지는 읽기만 가능하도록 설정 

chmod 555 /ptest/acldir01
setfacl -m g:aclgroup:7 /ptest/acldir01

======================================================================


cron 실습

매월 1일 새벽 12시 30분에 datefile1에 date 명령어 결과가 이어쓰기로 써지도록

30  1 * *  date >> datefile1

1분마다 date명령어를 실행해서 datefile2에 이어쓰기로 써지도록

* * * * *  date >> datefile2

매년 1월 1일 오후 12시에 date 명령어가 datefile3로 덮어쓰기로 실행되도록

0 12 1  1  *  date > datefile3

centos 사용자 가 매년 크리스마스 자정에 Merry christmas 메세지를 /tmp 디렉토리의 christmas 파일에 덮어쓰기로 되도록

crontab -e  -u centos  

or

su - centos
crontab -e

0 0 25 12 * echo "Merry christmas" > /tmp/christmas

1월 1일 11일 21일 오후 3시부터 오후 5시까지 15분 마다 date 명령어가 datefile4에 이어쓰기로 실행되도록 

*/15 15-17 1,11,21 1 * date >> datefile4

매주 월요일 목요일 새벽 1시에 재부팅이 되도록 설정

0 1 * * 1,4 reboot

매월 첫번째 화요일 오후 3시에 재부팅이 되도록 설정 (crontab 명령어를 사용하지 않고 설정하시오)

vi /etc/crontab

G
o
0 15 1-7 * 2 root reboot

:w  /etc/cron.d/reboot
:q!




===============================================================

초기화

2G,3G,4G 주파티션 생성

2G,2G 확장 파티션 생성

/ptest/ /stest/ /home1/ 생성

mkdir /{ptest,stest,home1}

2G(xfs)는 /ptest에 마운트

mkfs -t xfs /dev/sdb1
mount /dev/sdb1  /ptest

3G(ext4)는 /stest에 마운트

mkfs -t ext4 /dev/sdb2
mount /dev/sdb2 /stest

4G(xfs)는 /home1에 마운트 영구 마운트 설정

mkfs.xfs  /dev/sdb3

vi /etc/fstab

G
o
/dev/sdb3    /home1    xfs    defaults    0    1
:wq

mount -a

새로 생성 되는 사용자들이 /home1 에 생성 되도록 설정

useradd -D -b /home1


생성
사용자   uid    gid   comment   home directory  shell
user01  1001   1001  user1     /home1/user01   /bin/bash

useradd -c user1  user01

user02  2000   1000            /home/user2     /bin/csh

useradd -u 2000 -g 1000 -d  /home/user2  -s /bin/csh  user02

user03  3000   3000  user3     /home/user03    /bin/sh

useradd -u 3000 -c user3   -b /home -s /bin/sh  user03

user04  3001   1000            /home1/user04   /bin/bash

useradd -g 1000 user04

수정
사용자   uid    gid   comment   home directory  shell
user01  1001   1001            /home1/user01    /bin/bash

usermod -c "" user01

user02  1002   1002            /home1/user02    /bin/bash

groupadd -g 1002 user02
usermod -u 1002 -g 1002 -md /home1/user02  -s /bin/bash  user02

user03  1003   1003  user3     /home/user03    /bin/bash

usermod -u 1003 -s /bin/bash user03
groupmod -g 1003 user03

user04  1004   1004            /home1/user04    /bin/bash

groupadd -g 1004 user04
usermod -u 1004 -g 1004  user04

생성한 계정을 활성화 시키시오

passwd user01
passwd user02
passwd user03
passwd user04

user03은 sudo 명령어를 사용할 수 있도록 설정

usermod -G wheel user03

default 값을 vi 명령어로 HOME=/home로 변경하시오.

vi /etc/default/useradd

/home1 =>  /home

그룹 생성

aclgroup 구성원으로 user02,user04 후에 확인

groupadd -g 5000 aclgroup
usermod -G aclgroup user02
usermod -G 5000 user04

/ptest에 모든 권한을 다 주고 만들어지는 파일이나 디렉토리가 모두 aclgroup의 소유가 되도록 설정

chmod 2777 /ptest
chown :aclgroup /ptest

/ptest/test 파일을 생성 후에 모든 권한 삭제 후에 일반 사용자들이 test 파일을 vi 편집기로 편집할 수 있도록 만드시오.

touch /ptest/test
chmod 000 /ptest/test

chmod u+s /bin/vim

/stest에 user01을 제외한 모든 사용자가 모든 권한을 사용할 수 있도록 설정
그리고 /stest에 만들어지는 파일이나 디렉토리에 user03이 접근할 수 없도록 설정

chmod 777 /stest
setfacl -m u:user01:0,d:u:user03:0 /stest

user02가 매년 1,3,5,9월 2번째,3번째 금요일 밤 11시 58분에 date 명령을 /tmp/user02datefile 에 이어쓰기로 저장하도록 설정하시오.

crontab -e -u user02

58 23 8-21 1,3,5,9 5 date >> /tmp/user02datefile

mount 해제를 하고 사용자 user01을 사용할 수 있는지 확인해보시오.

umount -a

su - user01

접속되지만 user01의 홈디렉토리가 존재하지 않기 때문에

프롬프트도 기본 프롬프트가 적용
로그인되는 위치는 / 가 나옴.

확장 파티션 2G 2개를 swap으로 마운트 하시오.

mkswap /dev/sdb5
mkswap /dev/sdb6

swapon /dev/sdb5
swapon /dev/sdb6

lsblk
free
swapon -s

/dev/sdb6은 swap으로 영구 마운트가 되도록 설정.

vi /etc/fstab

G
o
/dev/sdb6    swap    swap   defaults   0    0
:wq


모든 swap 마운트 해제 후 /etc/fstab에 등록된 사항을 마운트 되도록 하시오.

swapoff -a

free
swapon -s

swapon -a

free
swapon -s

/dev/sdb5는 영구마운트 설정하지 않았기 때문에 마운트가 안됨

-----------------------------------------------------------------------------------------------

RAID 종류


종류      별칭        기능        최소디스크수
RAID 0    스트라이프  성능          2
RAID 1    미러        안정성        2
RAID 5    패리티      성능+안정성   3
RAID 10   X           성능+안정성   4

LVM은 명령어를 통해서 RAID 구성을 할 수 있음.

최소 디스크 수는 지켜주어야 함.


물리볼륨 생성 : pvcreate 장치명1....(/dev/sdxn(x:abc,n:123)
볼륨그룹 생성 : vgcreate vg명 pv명... -s pe 사이즈
논리볼륨 생성 : lvcreate vg명 -n lv명 -L 실제 크기 or -l le 갯수

물리볼륨 삭제 : pvremove pv명...
볼륨그룹 삭제 : vgremove vg명
논리볼륨 삭제 : lvremove lv경로 (/dev/볼륨그룹명/논리볼륨명, /dev/mapper/볼륨그룹명-논리볼륨명)

LVM 실습
초기화

파티션

4G 2개
6G 2개 되도록 설정하시오.

/dev/sdb1~4 모두 물리 볼륨으로 생성

pvcreate /dev/sdb[1-4]

/dev/sdb2,4 볼륨 그룹 생성 (pe 단위를 8M로) 

vgcreate vg0  /dev/sdb[24] -s 8M

lv01 2G (-L 옵션을 사용해서) 

lvcreate vg0 -L 2G -n lv01

lv02 4G (-l  옵션을 사용해서)

lvcreate vg0 -l 512 -n lv02

mkdir /mnt/disk{1,2,3}

lv01 은 /mnt/disk1로 마운트 (파일시스템 xfs)

mkfs.xfs /dev/vg0/lv01

mount /dev/vg0/lv01 /mnt/disk1

lv02 는 /mnt/disk2로 마운트 (파일시스템 ext4)

mkfs.ext4  /dev/mapper/vg0-lv02

mount /dev/mapper/vg0-lv02  /mnt/disk2

lv03 생성 - 나머지 용량 모두 사용해서 생성 (파일시스템 xfs) 영구마운트

lvcreate vg0 -l 100%FREE -n lv03

mkfs.xfs /dev/vg0/lv03

vi /etc/fstab

G
o
/dev/vg0/lv03    /mnt/disk3    xfs    defaults   0   1
:wq

mount -a 마운트 시키고 확인

lsblk
df -Th

생성한 lv,vg,pv 모두 삭제

umount -a
vi /etc/fstab

G
dd
:wq

lvremove /dev/vg0/lv0[1-3]
vgremove vg0
pvremvoe /dev/sdb[1-4]

==============================================================================================================

볼륨그룹 확장 : vgextend vg명 pv명... 
볼륨그룹 축소 : vgreduce vg명 pv명...
물리볼륨 내용 이동 : pvmove pv명...

논리볼륨 확장 : lvextend -L (+추가크기 or 최종크기) lv경로 -r(파일시스템 확장)
xfs  파일시스템 확장 : xfs_growfs 마운트 포인트
ext4 파일시스템 확장 : resize2fs lv경로

LVM 실습

LVM 확장 축소 실습

스냅샷 초기화

파티션 용량 4,6,4,6

/dev/sdb1~4 모두 물리 볼륨으로 생성

pvcreat /dev/sdb[1-4]

/dev/sdb1,4 으로 볼륨 그룹 생성 (pe 단위를 16M로)

vgcreate vg0 /dev/sdb[14] -s 16M

lv01 4G (-L 옵션을 사용해서) 

lvcreate vg0 -L 4G -n lv01

lv02 4G (-l  옵션을 사용해서)

lvcreate vg0 -l 256 -n lv02

lv03 남은 용량 모두 사용 

lvcreate vg0 -l 100%FREE -n lv03

lv01 은 xfs 파일시스템으로 format 해서 /mnt/disk1로 마운트 

mkdir /mnt/disk{1..3}
mkfs.xfs /dev/vg0/lv01
mount /dev/vg0/lv01  /mnt/disk1

lv02 는 ext4 파일시스템으로 format 해서 /mnt/disk2로 마운트

mkfs.ext4 /dev/vg0/lv02
mount /dev/vg0/lv02  /mnt/disk2

lv03 은 xfs 파일시스템으로 format 해서/mnt/disk3로 마운트 

mkfs.xfs /dev/vg0/lv03
mount /dev/vg0/lv03  /mnt/disk3


볼륨그룹에 /dev/sdb3 추가할 것

vgextend  vg0  /dev/sdb3

lv01를 5G로 확장할 것(+ 옵션을 사용해서) -r 옵션 사용하지 말 것

lvextend -L +1G /dev/vg0/lv01

lsblk
df -Th

명령어로 파일시스템 확장

xfs_growfs /mnt/disk1

lsblk
df -Th

lv02를 6G로 확장할 것(+ 옵션을 사용하지 말고) -r 옵션 사용하지 말 것

lvextend -L 6G /dev/vg0/lv02

lsblk
df -Th

명령어로 파일시스템 확장

resize2fs  /dev/vg0/lv02

lsblk
df -Th

용량 확장 확인

df -Th

/dev/sdb4가 문제가 생겼습니다. /dev/sdb4를 제거하시오. 

vgreduce vg0 /dev/sdb4
에러 : /dev/sdb4 사용중
pvmove /dev/sdb4
에러 : 용량부족
vgextend vg0 /dev/sdb2
pvmove /dev/sdb4
자료 이동
vgreduce vg0 /dev/sdb4
제거 완료